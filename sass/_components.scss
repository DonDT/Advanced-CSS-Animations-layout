////////////////////////////////
////// Logo           /////////
//////////////////////////////

.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

////////////////////////////////
////// Seacrh Box           /////////
//////////////////////////////

.search {
  flex: 0 0 40%;

  // an item, becomes the flex container, so as to align and center the input and the icon.
  display: flex;
  align-items: center;
  justify-content: center;

  @media only screen and (max-width: $bp-smallest) {
    order: 1;
    // Making the search box expand and drop to the next line at 500px
    flex: 0 0 100%;
    background-color: var(--color-grey-light-2);
  }

  &__input {
    // input element don't inherit these from the main element.
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: 0.7rem 2rem;
    border-radius: 100px;
    width: 90%;
    // This makes the button, move unto of the input
    margin-right: -3.25rem;
    transition: all 0.2s;

    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }
    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px);
    }
  }
  &__icon {
    height: 2rem;
    width: 2rem;
    // We use fill to color svg icons.
    fill: var(--color-grey-dark-3);
  }
}

////////////////////////////////
////// User Nav          /////////
////////////////////////s//////

.user-nav {
  display: flex;
  align-items: center;
  // This is to make sure the item fill the entire space top to bottom, left to right- that's it's even though the item itself is smaller.
  align-self: stretch;

  // user-nav, then all of the direct children.
  & > * {
    display: flex;
    align-items: center;
    padding: 0 2rem;
    cursor: pointer;
    // Give it the entire height thats it's.
    height: 100%;
  }

  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative;
  }
  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }
  &__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 100px;
    background-color: var(--color-primary);
    color: #fff;
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;

    // Use flex box
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}

////// Side Navigation //////

.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  //this is for the media query to align the items, side by side.
  @media only screen and (max-width: $bp-medium) {
    display: flex;
    margin: 0;
  }

  &__item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: 0.5rem;

      //Removing the bottom margin
      @media only screen and(max-width: $bp-medium) {
        margin: 0;
      }
    }

    //On smaller screens, making each item occupy 1/4 of the available width
    @media only screen and(max-width:$bp-medium) {
      flex: 1;
    }
  }

  // Before the side nav element, we want to add a sudo element. It is the line that becomes visible, them expnads to the right side.
  &__item::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0px;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    // transform-origin: center or bottom or top. Defines where the transform property begins. thus the animation begins from the center.
    transform: scaleY(0);
    //Firts it is scaled in the Y direction, then it waist .2 seconds, then it takes .4 secconds to complete the width.
    transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s,
      background-color 0.1s;
  }

  //The active class, allows the item to maintian the hover state, even though not hovered.
  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1);
    width: 100%;
  }

  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    display: block;
    padding: 1.5rem 3rem;
    //This positioning is for the z-index, because, it only works when we have the position specified.
    position: relative;
    z-index: 10;

    display: flex;
    align-items: center;

    @media only screen and (max-width: $bp-medium) {
      justify-content: center;
    }

    @media only screen and (max-width: $bp-small) {
      flex-direction: column;
      padding: 1.5rem 0.5rem;
    }
  }
  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;

    // currentColor, allows the child to inherit the color of the parent element.
    fill: currentColor;

    @media only screen and (max-width: $bp-small) {
      margin-right: 0;
      width: 1.5rem;
      height: 1.5rem;
      margin-bottom: 0.7rem;
    }
  }
}

///// Legal Text //////

.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;

  @media only screen and (max-width: $bp-medium) {
    display: none;
  }
}

/// Galerry////

.gallery {
  display: flex;

  &__photo {
    width: 100%;
    // This is to remove any white space under the image, so it should always be displayed as a block
    display: block;
  }
}

///// Overview //////

.overview {
  display: flex;
  align-items: center;
  border-bottom: 1px solid var(--color-grey-light-2);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    // As the size of this item within the flex container is increase, all the other items adjust their sizes to match this item's size.
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;

    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
      padding: 1.25rem 2rem;
    }
  }
  &__stars {
    //flex: 1;
    // this is very importtant with flex box, it allows for automatic calculation of the items margin.
    margin-right: auto;
    // This is such that the stars aligned perfectly (vertically and horizontally) within their container.
    display: flex;
  }
  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }
  &__icon-location {
    margin-right: 0.5rem;
  }
  &__location {
    font-size: 1.2rem;

    display: flex;
    align-items: center;
  }
  &__rating {
    background-color: var(--color-primary);
    margin-left: 3rem;
    color: white;
    // making item takes the entire vh it has available

    padding: 0 2.25rem;
    align-self: stretch;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    @media only screen and (max-width: $bp-small) {
      padding: 0 1.5rem;
    }
  }
  &__rating-count {
    font-size: 0.8rem;
    text-transform: uppercase;

    @media only screen and (max-width: $bp-small) {
      font-size: 0.5rem;
    }
  }
  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -3px;

    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
    }
  }
}

/// Button Inline ///

.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  border-bottom: 1px solid currentColor;
  padding-bottom: 2px;
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: all 0.2s;

  & span {
    margin-left: 3px;
    transition: margin-left 0.2s;
  }

  &:hover {
    color: var(--color-grey-dark-1);
    span {
      margin-left: 8px;
    }
  }
  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }
}

@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.25);
  }
  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

//// Paragraph ////

// last of type applies to only the same type of the parent element
.paragraph:not(:last-of-type) {
  margin-bottom: 2rem;
}

//// List //////
.list {
  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);

  display: flex;
  flex-wrap: wrap;

  &__item {
    flex: 0 0 50%;
    margin-bottom: 0.7rem;
  }
  // another way of including the icon, as a before pseudo element.
  &__item::before {
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: 0.7rem;

    //Older browsers
    //background-image: url(../img/chevron-thin-right.svg);
    //background-size: cover;

    // newer browsers--masks
    background-color: var(--color-primary);
    -webkit-mask-image: url(../img/chevron-thin-right.svg);
    mask-image: url(../img/chevron-thin-right.svg);
    -webkit-mask-size: cover;
    mask-size: cover;
  }
}

//// Recommend ////
.recommend {
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);
  display: flex;
  align-items: center;

  &__count {
    margin-right: auto;
  }
  &__friends {
    display: flex;
  }
  &__photo {
    // removing the box-sizing border box, so as not to reduce the height of the image.
    box-sizing: content-box;
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 3px solid #fff;

    &:not(:last-child) {
      margin-right: -2rem;
    }
  }
}

/// Reviews //////
.review {
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  margin-bottom: 3.5rem;
  position: relative;
  // So the icon does not overflow
  overflow: hidden;

  @media only screen and (max-width: $bp-medium) {
    padding: 2rem;
    margin-bottom: 3rem;
  }

  &__text {
    margin-bottom: 2rem;
    z-index: 10;
    // Z-index only works if one sets the position. This positioning, is such that the z-index should work.
    position: relative;
  }
  &__user {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  &__photo {
    height: 3.5rem;
    width: 3.5rem;
    border-radius: 50%;
    margin-right: 1.5rem;
  }
  &__user-box {
    //margin-left: -7rem;
    margin-right: auto;
  }
  &__user-name {
    font-size: 1.1rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: 0.4rem;
  }
  &__user-date {
    font-size: 1rem;
    color: var(--color-grey-dark-3);
  }
  &__rating {
    color: var(--color-primary);
    font-size: 2.2rem;
    font-weight: 300;
  }
  &::before {
    content: "\201C";
    position: absolute;
    top: -2.75rem;
    left: -1rem;
    font-size: 20rem;
    color: var(--color-grey-light-2);
    font-family: sans-serif;
    line-height: 1;
    z-index: 1;
  }
}

//// Call to Action /////
.cta {
  padding: 3.5rem 0;
  text-align: center;

  @media only screen and (max-width: $bp-medium) {
    padding: 2.5rem 0;
  }

  &__book-now {
    font-size: 2rem;
    font-weight: 300;
    text-transform: uppercase;
    margin-bottom: 2.5rem;
  }
}
.btn {
  font-size: 1.5rem;
  font-weight: 300;
  text-transform: uppercase;
  border-radius: 200px;
  border: none;
  background-image: linear-gradient(
    to right,
    var(--color-primary-light),
    var(--color-primary-dark)
  );
  color: #fff;
  cursor: pointer;
  position: relative;
  // hiding the text above the button, because it is outside and overflown.
  overflow: hidden;

  // to avoid repeating code, select every direct child.
  & > * {
    display: inline-block;
    height: 100%;
    width: 100%;
    transition: all 0.2s;
  }

  &__visible {
    padding: 2rem 7.5rem;
  }
  &__invisible {
    padding: 2rem 0;
    position: absolute;
    left: 0;
    // -100% of it's parent element
    top: -100%;
  }
  &:hover {
    background-image: linear-gradient(
      to left,
      var(--color-primary-light),
      var(--color-primary-dark)
    );
  }

  &:hover &__visible {
    //100% of it's height
    transform: translateY(100%);
  }
  &:hover &__invisible {
    top: 0;
  }
  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }
}
